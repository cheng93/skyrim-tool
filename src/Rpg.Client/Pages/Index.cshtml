@page "/"
@inject AlchemyState state

<div class="alchemy">
<section class="alchemy-input alchemy-ingredients">
    <div class="alchemy-ingredients--inner">
        <IngredientSelect bind-Label="1st Ingredient" bind-Ingredients=@ingredients bind-Change=@((id) => state.ChangeIngredientOne(id)) />
        <IngredientInfo Ingredient=@state.IngredientOne />
    </div>
    <div class="alchemy-ingredients--inner">
        <IngredientSelect bind-Label="2nd Ingredient"  bind-Ingredients=@ingredients bind-Change=@((id) => state.ChangeIngredientTwo(id)) />
        <IngredientInfo Ingredient=@state.IngredientTwo />
    </div>
    <div class="alchemy-ingredients--inner">
        <IngredientSelect bind-Label="3rd Ingredient" bind-Ingredients=@ingredients bind-Change=@((id) => state.ChangeIngredientThree(id)) />
        <IngredientInfo Ingredient=@state.IngredientThree />
    </div>
</section>

<section class="alchemy-input alchemy-stats">
    <NumericInput bind-Label="Alchemy Level" bind-Min=@alchemyLevelMin bind-Max=@alchemyLevelMax bind-Default=@alchemyLevelDefault bind-Change=@((number) => state.ChangeAlchemyLevel(number)) />
    <NumericInput bind-Label="Fortify Alchemy %" bind-Step=@fortifyAlchemyStep bind-Default=@fortifyAlchemyDefault bind-Change=@((number) => state.ChangeFortifyAlchemy(number)) />

    <AlchemistDropdown bind-Change=@((rank) => state.ChangeAlchemistRank(rank)) />
    <PerkCheckbox bind-Label="Physician" bind-Change=@((hasPerk) => state.ChangeHasPhysician(hasPerk)) />
    <PerkCheckbox bind-Label="Benefactor" bind-Change=@((hasPerk) => state.ChangeHasBenefactor(hasPerk)) />
    <PerkCheckbox bind-Label="Poisoner" bind-Change=@((hasPerk) => state.ChangeHasPoisoner(hasPerk)) />
    <PerkCheckbox bind-Label="Purity" bind-Change=@((hasPerk) => state.ChangeHasPurity(hasPerk)) />
</section>

<button class="alchemy-input alchemy-button" onclick="@(async() => await state.CreatePotion())">Create Potion</button>

<section class="alchemy-potion">
    <PotionInfo Potion=@state.Potion></PotionInfo>
</section>
</div>

@functions
{
    private int alchemyLevelMin = 15;
    private int alchemyLevelMax = 100;
    private decimal alchemyLevelDefault;
    private decimal fortifyAlchemyStep = 0.01M;
    private decimal fortifyAlchemyDefault;

    private Ingredient[] ingredients = Array.Empty<Ingredient>();

    protected override async Task OnInitAsync()
    {
        state.OnChange += StateHasChanged;

        await state.LoadIngredients();

        ingredients = state.Ingredients;

        alchemyLevelDefault = state.AlchemyLevel;
        fortifyAlchemyDefault = state.FortifyAlchemyPercent;
    }
}