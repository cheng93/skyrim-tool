@page "/"
@inject AlchemyState state

<section>
    <IngredientSelect Ingredients=@ingredients Change=@((id) => state.ChangeIngredientOne(id)) />
    <IngredientInfo Ingredient=@state.IngredientOne />
    <IngredientSelect Ingredients=@ingredients Change=@((id) => state.ChangeIngredientTwo(id)) />
    <IngredientInfo Ingredient=@state.IngredientTwo />
    <IngredientSelect Ingredients=@ingredients Change=@((id) => state.ChangeIngredientThree(id)) />
    <IngredientInfo Ingredient=@state.IngredientThree />
</section>

<section>
    <NumericInput Label="Alchemy Level" Min=@alchemyLevelMin Max=@alchemyLevelMax Default=@alchemyLevelDefault Change=@((number) => state.ChangeAlchemyLevel(number)) />
    <NumericInput Label="Fortify Alchemy %" Step=@fortifyAlchemyStep Default=@fortifyAlchemyDefault Change=@((number) => state.ChangeFortifyAlchemy(number)) />
</section>

<section>
    <AlchemistDropdown Change=@((rank) => state.ChangeAlchemistRank(rank)) />
    <PerkCheckbox Label="Physician" Change=@((hasPerk) => state.ChangeHasPhysician(hasPerk)) />
    <PerkCheckbox Label="Benefactor" Change=@((hasPerk) => state.ChangeHasBenefactor(hasPerk)) />
    <PerkCheckbox Label="Poisoner" Change=@((hasPerk) => state.ChangeHasPoisoner(hasPerk)) />
    <PerkCheckbox Label="Purity" Change=@((hasPerk) => state.ChangeHasPurity(hasPerk)) />
</section>

<button @onclick(async() => await state.CreatePotion())>Create Potion</button>

<section>
    <PotionInfo Potion=@state.Potion></PotionInfo>
</section>

@functions
{
    private int alchemyLevelMin = 15;
    private int alchemyLevelMax = 100;
    private decimal alchemyLevelDefault;
    private decimal fortifyAlchemyStep = 0.01M;
    private decimal fortifyAlchemyDefault;

    private Ingredient[] ingredients = Array.Empty<Ingredient>();

    protected override async Task OnInitAsync()
    {
        state.OnChange += StateHasChanged;

        await state.LoadIngredients();

        ingredients = state.Ingredients;

        alchemyLevelDefault = state.AlchemyLevel;
        fortifyAlchemyDefault = state.FortifyAlchemyPercent;
    }
}